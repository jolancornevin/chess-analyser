{"ast":null,"code":"var _jsxFileName = \"/Users/jcornevin/Dev/Perso/chess-analyser/src/components/right-menu/right-menu.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nimport { ComputeMoveScore, NewMove } from \"../types\";\nimport { engineEval } from \"./engine\";\nimport { Lines } from \"./lines\";\nimport { Moves } from \"./moves\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RightMenu({\n  chess,\n  setFen,\n  orientation,\n  setOrientation\n}) {\n  _s();\n  const [moves, setMoves] = useState([]);\n  const [lines, setLines] = useState([]);\n\n  // Load a game\n  const onPGNChange = useCallback(async pgn => {\n    chess.loadPgn(pgn);\n    const moves = [];\n    let index = 0;\n\n    // start computing every move.\n    for (const value of chess.history({\n      verbose: true\n    })) {\n      let _index = index;\n      console.log(\"in loop for \", _index);\n      const move = NewMove(value, Math.floor(_index / 2) + 1);\n\n      // compute only our moves\n      if (orientation[0] !== move.cmove.color) {\n        moves.push(move);\n      } else {\n        moves.push(await ComputeMoveScore(move));\n      }\n      index += 1;\n    }\n    setFen(chess.fen());\n    setMoves(moves);\n  }, [chess, setFen]);\n\n  // Load a move\n  const onMoveClick = useCallback(async move => {\n    setFen(move.fen);\n    chess.load(move.fen);\n    setLines([]);\n    await engineEval(move.fen, 3).then(lines => setLines(lines));\n  }, [chess, setFen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        border: \"1px solid white\"\n      },\n      children: [\"PGN: \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: async e => await onPGNChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 22\n      }, this), \"Playing as \", orientation, \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: orientation === \"white\",\n        onChange: e => {\n          setOrientation(e.target.checked ? \"white\" : \"black\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8,\n        height: 700\n      },\n      children: [/*#__PURE__*/_jsxDEV(Lines, {\n        lines: lines\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Moves, {\n        moves: moves,\n        onMoveClick: onMoveClick,\n        orientation: orientation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(RightMenu, \"RUZNJ41DH5L7t1R5SsGd/7sluZo=\");\n_c = RightMenu;\nvar _c;\n$RefreshReg$(_c, \"RightMenu\");","map":{"version":3,"names":["useCallback","useState","ComputeMoveScore","NewMove","engineEval","Lines","Moves","jsxDEV","_jsxDEV","RightMenu","chess","setFen","orientation","setOrientation","_s","moves","setMoves","lines","setLines","onPGNChange","pgn","loadPgn","index","value","history","verbose","_index","console","log","move","Math","floor","cmove","color","push","fen","onMoveClick","load","then","children","style","flex","border","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","marginTop","height","_c","$RefreshReg$"],"sources":["/Users/jcornevin/Dev/Perso/chess-analyser/src/components/right-menu/right-menu.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nimport { Chess } from 'chess.js';\nimport { ComputeMoveScore, Line, Move, NewMove } from \"../types\";\nimport { engineEval } from \"./engine\";\nimport { Lines } from \"./lines\";\nimport { Moves } from \"./moves\";\n\ndeclare const colors: readonly [\"white\", \"black\"];\ndeclare type Color = typeof colors[number];\n\ninterface RightMenuProps {\n    chess: Chess;\n\n    setFen: React.Dispatch<React.SetStateAction<string>>;\n\n    orientation: Color;\n    setOrientation: React.Dispatch<React.SetStateAction<Color>>;\n}\n\nexport function RightMenu({chess, setFen, orientation, setOrientation }: RightMenuProps): JSX.Element {\n    const [moves, setMoves] = useState<Move[]>([]);\n    const [lines, setLines] = useState<Line[]>([]);\n\n    // Load a game\n    const onPGNChange = useCallback(async (pgn: string) => {\n        chess.loadPgn(pgn);\n\n        const moves: Move[] = [];\n        let index = 0;\n\n        // start computing every move.\n        for (const value of chess.history({ verbose: true })) {\n            let _index = index;\n\n            console.log(\"in loop for \", _index);\n\n            const move = NewMove(value, Math.floor(_index / 2) + 1);\n\n            // compute only our moves\n            if (orientation[0] !== move.cmove.color) {\n                moves.push(move)\n            } else {\n                moves.push(await ComputeMoveScore(move));\n            }\n\n            index += 1;\n        }\n\n        setFen(chess.fen());\n        setMoves(moves);\n        \n    }, [chess, setFen]);\n\n    // Load a move\n    const onMoveClick = useCallback(async (move: Move) => {\n        setFen(move.fen);\n        chess.load(move.fen);\n        setLines([]);\n        \n        await engineEval(move.fen, 3).then((lines) => setLines(lines));\n    }, [chess, setFen]);\n\n    return (\n        <div>\n            <div style={{ flex: 1, border: \"1px solid white\" }}>\n                {/* Fen: <input value={fen} onChange={e => setFen(e.target.value)} /> */}\n                PGN: <textarea onChange={async (e) => await onPGNChange(e.target.value)} />\n                Playing as {orientation}: <input type=\"checkbox\" checked={orientation === \"white\"} onChange={e => {setOrientation(e.target.checked ? \"white\": \"black\")}} />\n            </div>\n            <div style={{ marginTop: 8, height: 700}}>\n                <Lines lines={lines} />\n                <Moves moves={moves} onMoveClick={onMoveClick} orientation={orientation} />\n            </div>            \n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}