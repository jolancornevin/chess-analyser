{"ast":null,"code":"var _jsxFileName = \"/Users/jcornevin/Dev/Perso/chess-analyser/src/components/right-menu/right-menu.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nimport { searchFromFen } from \"./engine\";\nimport { Lines } from \"./lines\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RightMenu({\n  chess,\n  setFen,\n  orientation,\n  setOrientation\n}) {\n  _s();\n  const [moves, setMoves] = useState([]);\n  const [lines, setLines] = useState([]);\n\n  // Load a game\n  const onPGNChange = useCallback(async pgn => {\n    chess.loadPgn(pgn);\n    setFen(chess.fen());\n    console.log({\n      chess\n    });\n    let moves = [];\n    let index = 0;\n    // start computing every move.\n    for (const value of chess.history({\n      verbose: true\n    })) {\n      let _index = index;\n      await searchFromFen(value.before, 1).then(lines => {\n        moves.push({\n          to: value.to,\n          fen: value.after,\n          number: Math.floor(_index / 2),\n          eval: lines.length > 0 ? lines[0].score : \"-\"\n        });\n      });\n      index += 1;\n    }\n    setMoves(moves);\n  }, [chess, setFen]);\n\n  // Load a move\n  const onMoveClick = useCallback(async move => {\n    setFen(move.fen);\n    chess.load(move.fen);\n    setLines([]);\n    await searchFromFen(move.fen, 3).then(lines => setLines(lines));\n  }, [chess, setFen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {},\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [\"PGN: \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: async e => await onPGNChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 22\n      }, this), \"Direction: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: orientation === \"white\",\n        onChange: e => {\n          console.log(e.target.value);\n          setOrientation(e.target.checked ? \"white\" : \"black\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Lines, {\n      lines: lines\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowY: \"auto\",\n        height: 700,\n        paddingTop: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          width: \"100%\"\n        },\n        children: moves.map((move, i) => {\n          // TODO hightlight current move + hotkey left and right to move from move to move\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"50%\",\n              cursor: \"pointer\",\n              textAlign: \"left\"\n            },\n            onClick: async () => {\n              await onMoveClick(move);\n            },\n            children: [move.number, \". \", move.to, \" [\", move.eval, \"]\"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(RightMenu, \"RUZNJ41DH5L7t1R5SsGd/7sluZo=\");\n_c = RightMenu;\nvar _c;\n$RefreshReg$(_c, \"RightMenu\");","map":{"version":3,"names":["useCallback","useState","searchFromFen","Lines","jsxDEV","_jsxDEV","RightMenu","chess","setFen","orientation","setOrientation","_s","moves","setMoves","lines","setLines","onPGNChange","pgn","loadPgn","fen","console","log","index","value","history","verbose","_index","before","then","push","to","after","number","Math","floor","eval","length","score","onMoveClick","move","load","style","children","flex","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","overflowY","height","paddingTop","display","flexDirection","flexWrap","width","map","i","cursor","textAlign","onClick","_c","$RefreshReg$"],"sources":["/Users/jcornevin/Dev/Perso/chess-analyser/src/components/right-menu/right-menu.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nimport { Chess } from 'chess.js';\nimport { Line, Move } from \"../types\";\nimport { searchFromFen } from \"./engine\";\nimport { Lines } from \"./lines\";\n\ndeclare const colors: readonly [\"white\", \"black\"];\ndeclare type Color = typeof colors[number];\n\ninterface RightMenuProps {\n    chess: Chess;\n\n    setFen: React.Dispatch<React.SetStateAction<string>>;\n\n    orientation: Color;\n    setOrientation: React.Dispatch<React.SetStateAction<Color>>;\n}\n\nexport function RightMenu({chess, setFen, orientation, setOrientation }: RightMenuProps): JSX.Element {\n    const [moves, setMoves] = useState<Move[]>([]);\n    const [lines, setLines] = useState<Line[]>([]);\n\n    // Load a game\n    const onPGNChange = useCallback(async (pgn: string) => {\n        chess.loadPgn(pgn);\n        setFen(chess.fen());\n        console.log({ chess });\n\n        let moves: Move[] = [];\n        let index = 0;\n        // start computing every move.\n        for (const value of chess.history({ verbose: true })) {\n            let _index = index;\n            await searchFromFen(value.before, 1).then((lines) => {\n                moves.push(\n                    { to: value.to, fen: value.after, number: Math.floor(_index / 2), eval: (lines.length > 0? lines[0].score: \"-\") }\n                )\n            });            \n\n            index += 1;\n        }\n        setMoves(moves);\n        \n    }, [chess, setFen]);\n\n    // Load a move\n    const onMoveClick = useCallback(async (move: Move) => {\n        setFen(move.fen);\n        chess.load(move.fen);\n        setLines([]);\n        \n        await searchFromFen(move.fen, 3).then((lines) => setLines(lines));\n    }, [chess, setFen]);\n\n    return (\n        <div style={{  }}>\n            <div style={{ flex: 1 }}>\n                {/* Fen: <input value={fen} onChange={e => setFen(e.target.value)} /> */}\n                PGN: <textarea onChange={async (e) => await onPGNChange(e.target.value)} />\n                Direction: <input type=\"checkbox\" checked={orientation === \"white\"} onChange={e => {console.log(e.target.value); setOrientation(e.target.checked ? \"white\": \"black\")}} />\n            </div>\n\n            <Lines lines={lines} />\n\n            <div style={{overflowY:\"auto\", height: 700, paddingTop: 8}}>\n                <div style={{\n                    flex: 1,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    flexWrap: \"wrap\",\n                    width: \"100%\"\n                    }}>\n                        {moves.map((move, i): JSX.Element => {\n                            // TODO hightlight current move + hotkey left and right to move from move to move\n                            return (\n                                <div key={i}  style={{ width: \"50%\", cursor: \"pointer\", textAlign: \"left\" }} onClick={async () => {\n                                   await onMoveClick(move)\n                                }}>\n                                    {move.number}. {move.to} [{move.eval}]\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAI7C,SAASC,aAAa,QAAQ,UAAU;AACxC,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAchC,OAAO,SAASC,SAASA,CAAC;EAACC,KAAK;EAAEC,MAAM;EAAEC,WAAW;EAAEC;AAA+B,CAAC,EAAe;EAAAC,EAAA;EAClG,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;;EAE9C;EACA,MAAMe,WAAW,GAAGhB,WAAW,CAAC,MAAOiB,GAAW,IAAK;IACnDV,KAAK,CAACW,OAAO,CAACD,GAAG,CAAC;IAClBT,MAAM,CAACD,KAAK,CAACY,GAAG,CAAC,CAAC,CAAC;IACnBC,OAAO,CAACC,GAAG,CAAC;MAAEd;IAAM,CAAC,CAAC;IAEtB,IAAIK,KAAa,GAAG,EAAE;IACtB,IAAIU,KAAK,GAAG,CAAC;IACb;IACA,KAAK,MAAMC,KAAK,IAAIhB,KAAK,CAACiB,OAAO,CAAC;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC,EAAE;MAClD,IAAIC,MAAM,GAAGJ,KAAK;MAClB,MAAMpB,aAAa,CAACqB,KAAK,CAACI,MAAM,EAAE,CAAC,CAAC,CAACC,IAAI,CAAEd,KAAK,IAAK;QACjDF,KAAK,CAACiB,IAAI,CACN;UAAEC,EAAE,EAAEP,KAAK,CAACO,EAAE;UAAEX,GAAG,EAAEI,KAAK,CAACQ,KAAK;UAAEC,MAAM,EAAEC,IAAI,CAACC,KAAK,CAACR,MAAM,GAAG,CAAC,CAAC;UAAES,IAAI,EAAGrB,KAAK,CAACsB,MAAM,GAAG,CAAC,GAAEtB,KAAK,CAAC,CAAC,CAAC,CAACuB,KAAK,GAAE;QAAK,CACpH,CAAC;MACL,CAAC,CAAC;MAEFf,KAAK,IAAI,CAAC;IACd;IACAT,QAAQ,CAACD,KAAK,CAAC;EAEnB,CAAC,EAAE,CAACL,KAAK,EAAEC,MAAM,CAAC,CAAC;;EAEnB;EACA,MAAM8B,WAAW,GAAGtC,WAAW,CAAC,MAAOuC,IAAU,IAAK;IAClD/B,MAAM,CAAC+B,IAAI,CAACpB,GAAG,CAAC;IAChBZ,KAAK,CAACiC,IAAI,CAACD,IAAI,CAACpB,GAAG,CAAC;IACpBJ,QAAQ,CAAC,EAAE,CAAC;IAEZ,MAAMb,aAAa,CAACqC,IAAI,CAACpB,GAAG,EAAE,CAAC,CAAC,CAACS,IAAI,CAAEd,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,CAACP,KAAK,EAAEC,MAAM,CAAC,CAAC;EAEnB,oBACIH,OAAA;IAAKoC,KAAK,EAAE,CAAG,CAAE;IAAAC,QAAA,gBACbrC,OAAA;MAAKoC,KAAK,EAAE;QAAEE,IAAI,EAAE;MAAE,CAAE;MAAAD,QAAA,GACqD,OACpE,eAAArC,OAAA;QAAUuC,QAAQ,EAAE,MAAOC,CAAC,IAAK,MAAM7B,WAAW,CAAC6B,CAAC,CAACC,MAAM,CAACvB,KAAK;MAAE;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChE,eAAA7C,OAAA;QAAO8C,IAAI,EAAC,UAAU;QAACC,OAAO,EAAE3C,WAAW,KAAK,OAAQ;QAACmC,QAAQ,EAAEC,CAAC,IAAI;UAACzB,OAAO,CAACC,GAAG,CAACwB,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAC;UAAEb,cAAc,CAACmC,CAAC,CAACC,MAAM,CAACM,OAAO,GAAG,OAAO,GAAE,OAAO,CAAC;QAAA;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxK,CAAC,eAEN7C,OAAA,CAACF,KAAK;MAACW,KAAK,EAAEA;IAAM;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEvB7C,OAAA;MAAKoC,KAAK,EAAE;QAACY,SAAS,EAAC,MAAM;QAAEC,MAAM,EAAE,GAAG;QAAEC,UAAU,EAAE;MAAC,CAAE;MAAAb,QAAA,eACvDrC,OAAA;QAAKoC,KAAK,EAAE;UACRE,IAAI,EAAE,CAAC;UACPa,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,KAAK;UACpBC,QAAQ,EAAE,MAAM;UAChBC,KAAK,EAAE;QACP,CAAE;QAAAjB,QAAA,EACG9B,KAAK,CAACgD,GAAG,CAAC,CAACrB,IAAI,EAAEsB,CAAC,KAAkB;UACjC;UACA,oBACIxD,OAAA;YAAcoC,KAAK,EAAE;cAAEkB,KAAK,EAAE,KAAK;cAAEG,MAAM,EAAE,SAAS;cAAEC,SAAS,EAAE;YAAO,CAAE;YAACC,OAAO,EAAE,MAAAA,CAAA,KAAY;cAC/F,MAAM1B,WAAW,CAACC,IAAI,CAAC;YAC1B,CAAE;YAAAG,QAAA,GACGH,IAAI,CAACP,MAAM,EAAC,IAAE,EAACO,IAAI,CAACT,EAAE,EAAC,IAAE,EAACS,IAAI,CAACJ,IAAI,EAAC,GACzC;UAAA,GAJU0B,CAAC;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIN,CAAC;QAEd,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACvC,EAAA,CArEeL,SAAS;AAAA2D,EAAA,GAAT3D,SAAS;AAAA,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}