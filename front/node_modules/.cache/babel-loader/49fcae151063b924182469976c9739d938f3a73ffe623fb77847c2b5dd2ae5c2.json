{"ast":null,"code":"import { unselect, cancelMove, getKeyAtDomPos, getSnappedKeyAtDomPos, whitePov } from './board.js';\nimport { eventPosition, isRightButton } from './util.js';\nconst brushes = ['green', 'red', 'blue', 'yellow'];\nexport function start(state, e) {\n  // support one finger touch only\n  if (e.touches && e.touches.length > 1) return;\n  e.stopPropagation();\n  e.preventDefault();\n  e.ctrlKey ? unselect(state) : cancelMove(state);\n  const pos = eventPosition(e),\n    orig = getKeyAtDomPos(pos, whitePov(state), state.dom.bounds());\n  if (!orig) return;\n  state.drawable.current = {\n    orig,\n    pos,\n    brush: eventBrush(e),\n    snapToValidMove: state.drawable.defaultSnapToValidMove\n  };\n  processDraw(state);\n}\nexport function processDraw(state) {\n  requestAnimationFrame(() => {\n    const cur = state.drawable.current;\n    if (cur) {\n      const keyAtDomPos = getKeyAtDomPos(cur.pos, whitePov(state), state.dom.bounds());\n      if (!keyAtDomPos) {\n        cur.snapToValidMove = false;\n      }\n      const mouseSq = cur.snapToValidMove ? getSnappedKeyAtDomPos(cur.orig, cur.pos, whitePov(state), state.dom.bounds()) : keyAtDomPos;\n      if (mouseSq !== cur.mouseSq) {\n        cur.mouseSq = mouseSq;\n        cur.dest = mouseSq !== cur.orig ? mouseSq : undefined;\n        state.dom.redrawNow();\n      }\n      processDraw(state);\n    }\n  });\n}\nexport function move(state, e) {\n  if (state.drawable.current) state.drawable.current.pos = eventPosition(e);\n}\nexport function end(state) {\n  const cur = state.drawable.current;\n  if (cur) {\n    if (cur.mouseSq) addShape(state.drawable, cur);\n    cancel(state);\n  }\n}\nexport function cancel(state) {\n  if (state.drawable.current) {\n    state.drawable.current = undefined;\n    state.dom.redraw();\n  }\n}\nexport function clear(state) {\n  if (state.drawable.shapes.length) {\n    state.drawable.shapes = [];\n    state.dom.redraw();\n    onChange(state.drawable);\n  }\n}\nfunction eventBrush(e) {\n  var _a;\n  const modA = (e.shiftKey || e.ctrlKey) && isRightButton(e);\n  const modB = e.altKey || e.metaKey || ((_a = e.getModifierState) === null || _a === void 0 ? void 0 : _a.call(e, 'AltGraph'));\n  return brushes[(modA ? 1 : 0) + (modB ? 2 : 0)];\n}\nfunction addShape(drawable, cur) {\n  const sameShape = s => s.orig === cur.orig && s.dest === cur.dest;\n  const similar = drawable.shapes.find(sameShape);\n  if (similar) drawable.shapes = drawable.shapes.filter(s => !sameShape(s));\n  if (!similar || similar.brush !== cur.brush) drawable.shapes.push(cur);\n  onChange(drawable);\n}\nfunction onChange(drawable) {\n  if (drawable.onChange) drawable.onChange(drawable.shapes);\n}","map":{"version":3,"names":["unselect","cancelMove","getKeyAtDomPos","getSnappedKeyAtDomPos","whitePov","eventPosition","isRightButton","brushes","start","state","e","touches","length","stopPropagation","preventDefault","ctrlKey","pos","orig","dom","bounds","drawable","current","brush","eventBrush","snapToValidMove","defaultSnapToValidMove","processDraw","requestAnimationFrame","cur","keyAtDomPos","mouseSq","dest","undefined","redrawNow","move","end","addShape","cancel","redraw","clear","shapes","onChange","modA","shiftKey","modB","altKey","metaKey","_a","getModifierState","call","sameShape","s","similar","find","filter","push"],"sources":["/Users/jcornevin/Dev/Perso/chess-analyser/node_modules/chessground/src/draw.ts"],"sourcesContent":["import { State } from './state.js';\nimport { unselect, cancelMove, getKeyAtDomPos, getSnappedKeyAtDomPos, whitePov } from './board.js';\nimport { eventPosition, isRightButton } from './util.js';\nimport * as cg from './types.js';\n\nexport interface DrawShape {\n  orig: cg.Key;\n  dest?: cg.Key;\n  brush?: string;\n  modifiers?: DrawModifiers;\n  piece?: DrawShapePiece;\n  customSvg?: string;\n}\n\nexport interface DrawShapePiece {\n  role: cg.Role;\n  color: cg.Color;\n  scale?: number;\n}\n\nexport interface DrawBrush {\n  key: string;\n  color: string;\n  opacity: number;\n  lineWidth: number;\n}\n\nexport interface DrawBrushes {\n  [name: string]: DrawBrush;\n}\n\nexport interface DrawModifiers {\n  lineWidth?: number;\n}\n\nexport interface Drawable {\n  enabled: boolean; // can draw\n  visible: boolean; // can view\n  defaultSnapToValidMove: boolean;\n  eraseOnClick: boolean;\n  onChange?: (shapes: DrawShape[]) => void;\n  shapes: DrawShape[]; // user shapes\n  autoShapes: DrawShape[]; // computer shapes\n  current?: DrawCurrent;\n  brushes: DrawBrushes;\n  prevSvgHash: string;\n}\n\nexport interface DrawCurrent {\n  orig: cg.Key; // orig key of drawing\n  dest?: cg.Key; // shape dest, or undefined for circle\n  mouseSq?: cg.Key; // square being moused over\n  pos: cg.NumberPair; // relative current position\n  brush: string; // brush name for shape\n  snapToValidMove: boolean; // whether to snap to valid piece moves\n}\n\nconst brushes = ['green', 'red', 'blue', 'yellow'];\n\nexport function start(state: State, e: cg.MouchEvent): void {\n  // support one finger touch only\n  if (e.touches && e.touches.length > 1) return;\n  e.stopPropagation();\n  e.preventDefault();\n  e.ctrlKey ? unselect(state) : cancelMove(state);\n  const pos = eventPosition(e)!,\n    orig = getKeyAtDomPos(pos, whitePov(state), state.dom.bounds());\n  if (!orig) return;\n  state.drawable.current = {\n    orig,\n    pos,\n    brush: eventBrush(e),\n    snapToValidMove: state.drawable.defaultSnapToValidMove,\n  };\n\n  processDraw(state);\n}\n\nexport function processDraw(state: State): void {\n  requestAnimationFrame(() => {\n    const cur = state.drawable.current;\n    if (cur) {\n      const keyAtDomPos = getKeyAtDomPos(cur.pos, whitePov(state), state.dom.bounds());\n      if (!keyAtDomPos) {\n        cur.snapToValidMove = false;\n      }\n      const mouseSq = cur.snapToValidMove\n        ? getSnappedKeyAtDomPos(cur.orig, cur.pos, whitePov(state), state.dom.bounds())\n        : keyAtDomPos;\n      if (mouseSq !== cur.mouseSq) {\n        cur.mouseSq = mouseSq;\n        cur.dest = mouseSq !== cur.orig ? mouseSq : undefined;\n        state.dom.redrawNow();\n      }\n      processDraw(state);\n    }\n  });\n}\n\nexport function move(state: State, e: cg.MouchEvent): void {\n  if (state.drawable.current) state.drawable.current.pos = eventPosition(e)!;\n}\n\nexport function end(state: State): void {\n  const cur = state.drawable.current;\n  if (cur) {\n    if (cur.mouseSq) addShape(state.drawable, cur);\n    cancel(state);\n  }\n}\n\nexport function cancel(state: State): void {\n  if (state.drawable.current) {\n    state.drawable.current = undefined;\n    state.dom.redraw();\n  }\n}\n\nexport function clear(state: State): void {\n  if (state.drawable.shapes.length) {\n    state.drawable.shapes = [];\n    state.dom.redraw();\n    onChange(state.drawable);\n  }\n}\n\nfunction eventBrush(e: cg.MouchEvent): string {\n  const modA = (e.shiftKey || e.ctrlKey) && isRightButton(e);\n  const modB = e.altKey || e.metaKey || e.getModifierState?.('AltGraph');\n  return brushes[(modA ? 1 : 0) + (modB ? 2 : 0)];\n}\n\nfunction addShape(drawable: Drawable, cur: DrawCurrent): void {\n  const sameShape = (s: DrawShape) => s.orig === cur.orig && s.dest === cur.dest;\n  const similar = drawable.shapes.find(sameShape);\n  if (similar) drawable.shapes = drawable.shapes.filter(s => !sameShape(s));\n  if (!similar || similar.brush !== cur.brush) drawable.shapes.push(cur);\n  onChange(drawable);\n}\n\nfunction onChange(drawable: Drawable): void {\n  if (drawable.onChange) drawable.onChange(drawable.shapes);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}