{"ast":null,"code":"var _jsxFileName = \"/Users/jcornevin/Dev/Perso/chess-analyser/src/chess.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useCallback, useMemo, useState } from \"react\";\nimport Chessground from \"@react-chess/chessground\";\nimport { Chess } from 'chess.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RightMenu({\n  chess,\n  setFen,\n  orientation,\n  setOrientation\n}) {\n  _s();\n  const [moves, setMoves] = useState([]);\n  const [lines, setLines] = useState([]);\n  const engine = useMemo(() => {\n    console.log(\"getting sf\");\n    const engine = eval(\"stockfish\");\n    console.log(engine.postMessage(\"setoption name MultiPV value 3\"));\n    engine.onmessage = event => {\n      let message = event.data;\n      console.log(message);\n      if (message.startsWith('info depth 10')) {\n        const regx = message.match(`.*score cp (.*)nodes.* pv (.*)`);\n        setLines(prev => [...prev, {\n          score: Number(regx[1]),\n          line: regx[2]\n        }]);\n      }\n    };\n    engine.onerror = event => {\n      console.log({\n        event\n      });\n    };\n    return engine;\n  }, []);\n\n  // Load a game\n  const onPGNChange = useCallback(pgn => {\n    chess.loadPgn(pgn);\n    setFen(chess.fen());\n    console.log({\n      chess\n    });\n\n    // start computing every move.\n    setMoves(chess.history({\n      verbose: true\n    }).map((value, index) => {\n      return {\n        to: value.to,\n        fen: value.after,\n        number: Math.floor(index / 2)\n      };\n    }));\n  }, [chess, setFen]);\n\n  // Load a move\n  const onMoveClick = useCallback(move => {\n    setFen(move.fen);\n    chess.load(move.fen);\n    setLines([]);\n    engine.postMessage(`position fen ${move.fen}`);\n    engine.postMessage(`eval`);\n    engine.postMessage(`go depth 10`);\n  }, [chess, engine, setFen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {},\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [\"PGN: \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => onPGNChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 22\n      }, this), \"Direction: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: orientation === \"white\",\n        onChange: e => {\n          console.log(e.target.value);\n          setOrientation(e.target.checked ? \"white\" : \"black\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        paddingTop: 8\n      },\n      children: lines.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"left\"\n        },\n        children: [line.score, \": \", line.line]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 42\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowY: \"auto\",\n        height: 800,\n        paddingTop: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          width: \"100%\"\n        },\n        children: moves.map((move, i) => {\n          // TODO hightlight current move\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"50%\",\n              cursor: \"pointer\",\n              textAlign: \"left\"\n            },\n            onClick: () => {\n              onMoveClick(move);\n            },\n            children: [move.number, \". \", move.to]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(RightMenu, \"ubsUSiLN2qxE/uXhBl/hCXCe7dY=\");\n_c = RightMenu;\nexport function ChessUX({}) {\n  _s2();\n  const [orientation, setOrientation] = useState(\"white\");\n  const [fen, setFen] = useState('');\n  const chess = useMemo(() => new Chess(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Chessground, {\n        config: {\n          fen: fen,\n          orientation: orientation,\n          autoCastle: true,\n          highlight: {\n            lastMove: true,\n            check: true\n          },\n          animation: {\n            enabled: true\n          },\n          drawable: {\n            enabled: true\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RightMenu, {\n      chess: chess,\n      orientation: orientation,\n      setOrientation: setOrientation,\n      setFen: setFen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n_s2(ChessUX, \"QWstNyoYoxuVEShzMABNhhJoyxY=\");\n_c2 = ChessUX;\n;\nvar _c, _c2;\n$RefreshReg$(_c, \"RightMenu\");\n$RefreshReg$(_c2, \"ChessUX\");","map":{"version":3,"names":["useCallback","useMemo","useState","Chessground","Chess","jsxDEV","_jsxDEV","RightMenu","chess","setFen","orientation","setOrientation","_s","moves","setMoves","lines","setLines","engine","console","log","eval","postMessage","onmessage","event","message","data","startsWith","regx","match","prev","score","Number","line","onerror","onPGNChange","pgn","loadPgn","fen","history","verbose","map","value","index","to","after","number","Math","floor","onMoveClick","move","load","style","children","flex","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","paddingTop","i","textAlign","overflowY","height","display","flexDirection","flexWrap","width","cursor","onClick","_c","ChessUX","_s2","config","autoCastle","highlight","lastMove","check","animation","enabled","drawable","_c2","$RefreshReg$"],"sources":["/Users/jcornevin/Dev/Perso/chess-analyser/src/chess.tsx"],"sourcesContent":["import { useCallback, useMemo, useState } from \"react\";\n\nimport Chessground from \"@react-chess/chessground\";\nimport { Chess, Move as CMove } from 'chess.js';\n\ndeclare const colors: readonly [\"white\", \"black\"];\ndeclare type Color = typeof colors[number];\n\ninterface Line {\n    line: string;\n\n    score: number;\n}\n\ninterface Move {\n    number: number;\n\n    to: string;\n    fen: string;\n}\n\ninterface RightMenuProps {\n    chess: Chess;\n\n    setFen: React.Dispatch<React.SetStateAction<string>>;\n\n    orientation: Color;\n    setOrientation: React.Dispatch<React.SetStateAction<Color>>;\n}\n\nfunction RightMenu({chess, setFen, orientation, setOrientation }: RightMenuProps): JSX.Element {\n    const [moves, setMoves] = useState<Move[]>([]);\n    const [lines, setLines] = useState<Line[]>([]);\n\n    const engine = useMemo(() => {\n        console.log(\"getting sf\");\n        const engine = eval(\"stockfish\");\n\n        console.log(engine.postMessage(\"setoption name MultiPV value 3\"))\n\n        engine.onmessage = (event: {data: string}) => {\n            let message = event.data;\n            console.log(message)\n            \n            if (message.startsWith('info depth 10')) {\n                const regx = message.match(`.*score cp (.*)nodes.* pv (.*)`);\n                setLines((prev) => [...prev, { score: Number(regx[1]), line: regx[2] } ])\n            }\n        }\n        engine.onerror = (event: any) => {\n            console.log({event});\n        }\n        \n        return engine;\n    }, []);\n\n    // Load a game\n    const onPGNChange = useCallback((pgn: string) => {\n        chess.loadPgn(pgn);\n        setFen(chess.fen());\n        console.log({ chess });\n\n        // start computing every move.\n        setMoves(chess.history({ verbose: true }).map((value: CMove, index: number): Move => {\n            return { to: value.to, fen: value.after, number: Math.floor(index / 2) };\n        }));\n    }, [chess, setFen]);\n\n    // Load a move\n    const onMoveClick = useCallback((move: Move) => {\n        setFen(move.fen);\n        chess.load(move.fen);\n        setLines([]);\n\n        engine.postMessage(`position fen ${move.fen}`);\n        engine.postMessage(`eval`);\n        engine.postMessage(`go depth 10`);\n    }, [chess, engine, setFen]);\n\n    return (\n        <div style={{  }}>\n            <div style={{ flex: 1 }}>\n                {/* Fen: <input value={fen} onChange={e => setFen(e.target.value)} /> */}\n                PGN: <textarea onChange={e => onPGNChange(e.target.value)} />\n                Direction: <input type=\"checkbox\" checked={orientation === \"white\"} onChange={e => {console.log(e.target.value); setOrientation(e.target.checked ? \"white\": \"black\")}} />\n            </div>\n\n            <div style={{ flex: 1, paddingTop: 8 }}>\n                {lines.map((line, i) => (<div key={i} style={{ textAlign: \"left\" }}>\n                    {line.score}: {line.line}\n                </div>))}\n            </div>\n\n            <div style={{overflowY:\"auto\", height: 800, paddingTop: 8}}>\n                <div style={{\n                    flex: 1,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    flexWrap: \"wrap\",\n                    width: \"100%\"\n                    }}>\n                        {moves.map((move, i): JSX.Element => {\n                            // TODO hightlight current move\n                            return (\n                                <div key={i}  style={{ width: \"50%\", cursor: \"pointer\", textAlign: \"left\" }} onClick={() => {\n                                    onMoveClick(move)\n                                }}>\n                                    {move.number}. {move.to}\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\ninterface ChessUXProps {}\nexport function ChessUX({ }: ChessUXProps): JSX.Element {\n    const [orientation, setOrientation] = useState<Color>(\"white\");\n    const [fen, setFen] = useState('');\n\n    const chess = useMemo(() => new Chess(), []);\n\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <div style={{ flex: 2 }}>\n                <Chessground config={{\n                    fen: fen,\n                    orientation: orientation,\n                    autoCastle: true,\n                    highlight: {\n                        lastMove: true,\n                        check: true,\n                    },\n                    animation: {\n                        enabled: true,\n                    },\n                    drawable: {\n                        enabled: true,\n                    },\n                }} />\n            </div>\n            <RightMenu chess={chess} orientation={orientation} setOrientation={setOrientation} setFen={setFen} />\n    </div>)\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}