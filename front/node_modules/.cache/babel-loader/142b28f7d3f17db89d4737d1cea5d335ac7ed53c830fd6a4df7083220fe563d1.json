{"ast":null,"code":"import { key2pos, createEl, posToTranslate as posToTranslateFromBounds, translateAndScale } from './util.js';\nimport { whitePov } from './board.js';\nimport { syncShapes } from './sync.js';\nexport function render(state, autoPieceEl) {\n  const autoPieces = state.drawable.autoShapes.filter(autoShape => autoShape.piece);\n  const autoPieceShapes = autoPieces.map(s => {\n    return {\n      shape: s,\n      hash: hash(s),\n      current: false\n    };\n  });\n  syncShapes(autoPieceShapes, autoPieceEl, shape => renderShape(state, shape, state.dom.bounds()));\n}\nexport function renderResized(state) {\n  var _a;\n  const asWhite = whitePov(state),\n    posToTranslate = posToTranslateFromBounds(state.dom.bounds());\n  let el = (_a = state.dom.elements.autoPieces) === null || _a === void 0 ? void 0 : _a.firstChild;\n  while (el) {\n    translateAndScale(el, posToTranslate(key2pos(el.cgKey), asWhite), el.cgScale);\n    el = el.nextSibling;\n  }\n}\nfunction renderShape(state, {\n  shape,\n  hash\n}, bounds) {\n  var _a, _b, _c;\n  const orig = shape.orig;\n  const role = (_a = shape.piece) === null || _a === void 0 ? void 0 : _a.role;\n  const color = (_b = shape.piece) === null || _b === void 0 ? void 0 : _b.color;\n  const scale = (_c = shape.piece) === null || _c === void 0 ? void 0 : _c.scale;\n  const pieceEl = createEl('piece', `${role} ${color}`);\n  pieceEl.setAttribute('cgHash', hash);\n  pieceEl.cgKey = orig;\n  pieceEl.cgScale = scale;\n  translateAndScale(pieceEl, posToTranslateFromBounds(bounds)(key2pos(orig), whitePov(state)), scale);\n  return pieceEl;\n}\nconst hash = autoPiece => {\n  var _a, _b, _c;\n  return [autoPiece.orig, (_a = autoPiece.piece) === null || _a === void 0 ? void 0 : _a.role, (_b = autoPiece.piece) === null || _b === void 0 ? void 0 : _b.color, (_c = autoPiece.piece) === null || _c === void 0 ? void 0 : _c.scale].join(',');\n};","map":{"version":3,"names":["key2pos","createEl","posToTranslate","posToTranslateFromBounds","translateAndScale","whitePov","syncShapes","render","state","autoPieceEl","autoPieces","drawable","autoShapes","filter","autoShape","piece","autoPieceShapes","map","s","shape","hash","current","renderShape","dom","bounds","renderResized","asWhite","el","_a","elements","firstChild","cgKey","cgScale","nextSibling","orig","role","color","_b","scale","_c","pieceEl","setAttribute","autoPiece","join"],"sources":["/Users/jcornevin/Dev/Perso/chess-analyser/node_modules/chessground/src/autoPieces.ts"],"sourcesContent":["import { State } from './state.js';\nimport { key2pos, createEl, posToTranslate as posToTranslateFromBounds, translateAndScale } from './util.js';\nimport { whitePov } from './board.js';\nimport * as cg from './types.js';\nimport { DrawShape } from './draw.js';\nimport { SyncableShape, Hash, syncShapes } from './sync.js';\n\nexport function render(state: State, autoPieceEl: HTMLElement): void {\n  const autoPieces = state.drawable.autoShapes.filter(autoShape => autoShape.piece);\n  const autoPieceShapes: SyncableShape[] = autoPieces.map((s: DrawShape) => {\n    return {\n      shape: s,\n      hash: hash(s),\n      current: false,\n    };\n  });\n\n  syncShapes(autoPieceShapes, autoPieceEl, shape => renderShape(state, shape, state.dom.bounds()));\n}\n\nexport function renderResized(state: State): void {\n  const asWhite: boolean = whitePov(state),\n    posToTranslate = posToTranslateFromBounds(state.dom.bounds());\n  let el = state.dom.elements.autoPieces?.firstChild as cg.PieceNode | undefined;\n  while (el) {\n    translateAndScale(el, posToTranslate(key2pos(el.cgKey), asWhite), el.cgScale);\n    el = el.nextSibling as cg.PieceNode | undefined;\n  }\n}\n\nfunction renderShape(state: State, { shape, hash }: SyncableShape, bounds: ClientRect): cg.PieceNode {\n  const orig = shape.orig;\n  const role = shape.piece?.role;\n  const color = shape.piece?.color;\n  const scale = shape.piece?.scale;\n\n  const pieceEl = createEl('piece', `${role} ${color}`) as cg.PieceNode;\n  pieceEl.setAttribute('cgHash', hash);\n  pieceEl.cgKey = orig;\n  pieceEl.cgScale = scale;\n  translateAndScale(pieceEl, posToTranslateFromBounds(bounds)(key2pos(orig), whitePov(state)), scale);\n\n  return pieceEl;\n}\n\nconst hash = (autoPiece: DrawShape): Hash =>\n  [autoPiece.orig, autoPiece.piece?.role, autoPiece.piece?.color, autoPiece.piece?.scale].join(',');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}