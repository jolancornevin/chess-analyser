{"ast":null,"code":"import * as util from './util.js';\nexport const anim = (mutation, state) => state.animation.enabled ? animate(mutation, state) : render(mutation, state);\nexport function render(mutation, state) {\n  const result = mutation(state);\n  state.dom.redraw();\n  return result;\n}\nconst makePiece = (key, piece) => ({\n  key: key,\n  pos: util.key2pos(key),\n  piece: piece\n});\nconst closer = (piece, pieces) => pieces.sort((p1, p2) => util.distanceSq(piece.pos, p1.pos) - util.distanceSq(piece.pos, p2.pos))[0];\nfunction computePlan(prevPieces, current) {\n  const anims = new Map(),\n    animedOrigs = [],\n    fadings = new Map(),\n    missings = [],\n    news = [],\n    prePieces = new Map();\n  let curP, preP, vector;\n  for (const [k, p] of prevPieces) {\n    prePieces.set(k, makePiece(k, p));\n  }\n  for (const key of util.allKeys) {\n    curP = current.pieces.get(key);\n    preP = prePieces.get(key);\n    if (curP) {\n      if (preP) {\n        if (!util.samePiece(curP, preP.piece)) {\n          missings.push(preP);\n          news.push(makePiece(key, curP));\n        }\n      } else news.push(makePiece(key, curP));\n    } else if (preP) missings.push(preP);\n  }\n  for (const newP of news) {\n    preP = closer(newP, missings.filter(p => util.samePiece(newP.piece, p.piece)));\n    if (preP) {\n      vector = [preP.pos[0] - newP.pos[0], preP.pos[1] - newP.pos[1]];\n      anims.set(newP.key, vector.concat(vector));\n      animedOrigs.push(preP.key);\n    }\n  }\n  for (const p of missings) {\n    if (!animedOrigs.includes(p.key)) fadings.set(p.key, p.piece);\n  }\n  return {\n    anims: anims,\n    fadings: fadings\n  };\n}\nfunction step(state, now) {\n  const cur = state.animation.current;\n  if (cur === undefined) {\n    // animation was canceled :(\n    if (!state.dom.destroyed) state.dom.redrawNow();\n    return;\n  }\n  const rest = 1 - (now - cur.start) * cur.frequency;\n  if (rest <= 0) {\n    state.animation.current = undefined;\n    state.dom.redrawNow();\n  } else {\n    const ease = easing(rest);\n    for (const cfg of cur.plan.anims.values()) {\n      cfg[2] = cfg[0] * ease;\n      cfg[3] = cfg[1] * ease;\n    }\n    state.dom.redrawNow(true); // optimisation: don't render SVG changes during animations\n    requestAnimationFrame((now = performance.now()) => step(state, now));\n  }\n}\nfunction animate(mutation, state) {\n  // clone state before mutating it\n  const prevPieces = new Map(state.pieces);\n  const result = mutation(state);\n  const plan = computePlan(prevPieces, state);\n  if (plan.anims.size || plan.fadings.size) {\n    const alreadyRunning = state.animation.current && state.animation.current.start;\n    state.animation.current = {\n      start: performance.now(),\n      frequency: 1 / state.animation.duration,\n      plan: plan\n    };\n    if (!alreadyRunning) step(state, performance.now());\n  } else {\n    // don't animate, just render right away\n    state.dom.redraw();\n  }\n  return result;\n}\n// https://gist.github.com/gre/1650294\nconst easing = t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;","map":{"version":3,"names":["util","anim","mutation","state","animation","enabled","animate","render","result","dom","redraw","makePiece","key","piece","pos","key2pos","closer","pieces","sort","p1","p2","distanceSq","computePlan","prevPieces","current","anims","Map","animedOrigs","fadings","missings","news","prePieces","curP","preP","vector","k","p","set","allKeys","get","samePiece","push","newP","filter","concat","includes","step","now","cur","undefined","destroyed","redrawNow","rest","start","frequency","ease","easing","cfg","plan","values","requestAnimationFrame","performance","size","alreadyRunning","duration","t"],"sources":["/Users/jcornevin/Dev/Perso/chess-analyser/node_modules/chessground/src/anim.ts"],"sourcesContent":["import { State } from './state.js';\nimport * as util from './util.js';\nimport * as cg from './types.js';\n\nexport type Mutation<A> = (state: State) => A;\n\n// 0,1 animation goal\n// 2,3 animation current status\nexport type AnimVector = cg.NumberQuad;\n\nexport type AnimVectors = Map<cg.Key, AnimVector>;\n\nexport type AnimFadings = Map<cg.Key, cg.Piece>;\n\nexport interface AnimPlan {\n  anims: AnimVectors;\n  fadings: AnimFadings;\n}\n\nexport interface AnimCurrent {\n  start: DOMHighResTimeStamp;\n  frequency: cg.KHz;\n  plan: AnimPlan;\n}\n\nexport const anim = <A>(mutation: Mutation<A>, state: State): A =>\n  state.animation.enabled ? animate(mutation, state) : render(mutation, state);\n\nexport function render<A>(mutation: Mutation<A>, state: State): A {\n  const result = mutation(state);\n  state.dom.redraw();\n  return result;\n}\n\ninterface AnimPiece {\n  key: cg.Key;\n  pos: cg.Pos;\n  piece: cg.Piece;\n}\ntype AnimPieces = Map<cg.Key, AnimPiece>;\n\nconst makePiece = (key: cg.Key, piece: cg.Piece): AnimPiece => ({\n  key: key,\n  pos: util.key2pos(key),\n  piece: piece,\n});\n\nconst closer = (piece: AnimPiece, pieces: AnimPiece[]): AnimPiece | undefined =>\n  pieces.sort((p1, p2) => util.distanceSq(piece.pos, p1.pos) - util.distanceSq(piece.pos, p2.pos))[0];\n\nfunction computePlan(prevPieces: cg.Pieces, current: State): AnimPlan {\n  const anims: AnimVectors = new Map(),\n    animedOrigs: cg.Key[] = [],\n    fadings: AnimFadings = new Map(),\n    missings: AnimPiece[] = [],\n    news: AnimPiece[] = [],\n    prePieces: AnimPieces = new Map();\n  let curP: cg.Piece | undefined, preP: AnimPiece | undefined, vector: cg.NumberPair;\n  for (const [k, p] of prevPieces) {\n    prePieces.set(k, makePiece(k, p));\n  }\n  for (const key of util.allKeys) {\n    curP = current.pieces.get(key);\n    preP = prePieces.get(key);\n    if (curP) {\n      if (preP) {\n        if (!util.samePiece(curP, preP.piece)) {\n          missings.push(preP);\n          news.push(makePiece(key, curP));\n        }\n      } else news.push(makePiece(key, curP));\n    } else if (preP) missings.push(preP);\n  }\n  for (const newP of news) {\n    preP = closer(\n      newP,\n      missings.filter(p => util.samePiece(newP.piece, p.piece))\n    );\n    if (preP) {\n      vector = [preP.pos[0] - newP.pos[0], preP.pos[1] - newP.pos[1]];\n      anims.set(newP.key, vector.concat(vector) as AnimVector);\n      animedOrigs.push(preP.key);\n    }\n  }\n  for (const p of missings) {\n    if (!animedOrigs.includes(p.key)) fadings.set(p.key, p.piece);\n  }\n\n  return {\n    anims: anims,\n    fadings: fadings,\n  };\n}\n\nfunction step(state: State, now: DOMHighResTimeStamp): void {\n  const cur = state.animation.current;\n  if (cur === undefined) {\n    // animation was canceled :(\n    if (!state.dom.destroyed) state.dom.redrawNow();\n    return;\n  }\n  const rest = 1 - (now - cur.start) * cur.frequency;\n  if (rest <= 0) {\n    state.animation.current = undefined;\n    state.dom.redrawNow();\n  } else {\n    const ease = easing(rest);\n    for (const cfg of cur.plan.anims.values()) {\n      cfg[2] = cfg[0] * ease;\n      cfg[3] = cfg[1] * ease;\n    }\n    state.dom.redrawNow(true); // optimisation: don't render SVG changes during animations\n    requestAnimationFrame((now = performance.now()) => step(state, now));\n  }\n}\n\nfunction animate<A>(mutation: Mutation<A>, state: State): A {\n  // clone state before mutating it\n  const prevPieces: cg.Pieces = new Map(state.pieces);\n\n  const result = mutation(state);\n  const plan = computePlan(prevPieces, state);\n  if (plan.anims.size || plan.fadings.size) {\n    const alreadyRunning = state.animation.current && state.animation.current.start;\n    state.animation.current = {\n      start: performance.now(),\n      frequency: 1 / state.animation.duration,\n      plan: plan,\n    };\n    if (!alreadyRunning) step(state, performance.now());\n  } else {\n    // don't animate, just render right away\n    state.dom.redraw();\n  }\n  return result;\n}\n\n// https://gist.github.com/gre/1650294\nconst easing = (t: number): number => (t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}