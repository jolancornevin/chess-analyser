{"ast":null,"code":"import * as util from './util.js';\nconst diff = (a, b) => Math.abs(a - b);\nconst pawn = color => (x1, y1, x2, y2) => diff(x1, x2) < 2 && (color === 'white' ?\n// allow 2 squares from first two ranks, for horde\ny2 === y1 + 1 || y1 <= 1 && y2 === y1 + 2 && x1 === x2 : y2 === y1 - 1 || y1 >= 6 && y2 === y1 - 2 && x1 === x2);\nexport const knight = (x1, y1, x2, y2) => {\n  const xd = diff(x1, x2);\n  const yd = diff(y1, y2);\n  return xd === 1 && yd === 2 || xd === 2 && yd === 1;\n};\nconst bishop = (x1, y1, x2, y2) => {\n  return diff(x1, x2) === diff(y1, y2);\n};\nconst rook = (x1, y1, x2, y2) => {\n  return x1 === x2 || y1 === y2;\n};\nexport const queen = (x1, y1, x2, y2) => {\n  return bishop(x1, y1, x2, y2) || rook(x1, y1, x2, y2);\n};\nconst king = (color, rookFiles, canCastle) => (x1, y1, x2, y2) => diff(x1, x2) < 2 && diff(y1, y2) < 2 || canCastle && y1 === y2 && y1 === (color === 'white' ? 0 : 7) && (x1 === 4 && (x2 === 2 && rookFiles.includes(0) || x2 === 6 && rookFiles.includes(7)) || rookFiles.includes(x2));\nfunction rookFilesOf(pieces, color) {\n  const backrank = color === 'white' ? '1' : '8';\n  const files = [];\n  for (const [key, piece] of pieces) {\n    if (key[1] === backrank && piece.color === color && piece.role === 'rook') {\n      files.push(util.key2pos(key)[0]);\n    }\n  }\n  return files;\n}\nexport function premove(pieces, key, canCastle) {\n  const piece = pieces.get(key);\n  if (!piece) return [];\n  const pos = util.key2pos(key),\n    r = piece.role,\n    mobility = r === 'pawn' ? pawn(piece.color) : r === 'knight' ? knight : r === 'bishop' ? bishop : r === 'rook' ? rook : r === 'queen' ? queen : king(piece.color, rookFilesOf(pieces, piece.color), canCastle);\n  return util.allPos.filter(pos2 => (pos[0] !== pos2[0] || pos[1] !== pos2[1]) && mobility(pos[0], pos[1], pos2[0], pos2[1])).map(util.pos2key);\n}","map":{"version":3,"names":["util","diff","a","b","Math","abs","pawn","color","x1","y1","x2","y2","knight","xd","yd","bishop","rook","queen","king","rookFiles","canCastle","includes","rookFilesOf","pieces","backrank","files","key","piece","role","push","key2pos","premove","get","pos","r","mobility","allPos","filter","pos2","map","pos2key"],"sources":["/Users/jcornevin/Dev/Perso/chess-analyser/node_modules/chessground/src/premove.ts"],"sourcesContent":["import * as util from './util.js';\nimport * as cg from './types.js';\n\ntype Mobility = (x1: number, y1: number, x2: number, y2: number) => boolean;\n\nconst diff = (a: number, b: number): number => Math.abs(a - b);\n\nconst pawn =\n  (color: cg.Color): Mobility =>\n  (x1, y1, x2, y2) =>\n    diff(x1, x2) < 2 &&\n    (color === 'white'\n      ? // allow 2 squares from first two ranks, for horde\n        y2 === y1 + 1 || (y1 <= 1 && y2 === y1 + 2 && x1 === x2)\n      : y2 === y1 - 1 || (y1 >= 6 && y2 === y1 - 2 && x1 === x2));\n\nexport const knight: Mobility = (x1, y1, x2, y2) => {\n  const xd = diff(x1, x2);\n  const yd = diff(y1, y2);\n  return (xd === 1 && yd === 2) || (xd === 2 && yd === 1);\n};\n\nconst bishop: Mobility = (x1, y1, x2, y2) => {\n  return diff(x1, x2) === diff(y1, y2);\n};\n\nconst rook: Mobility = (x1, y1, x2, y2) => {\n  return x1 === x2 || y1 === y2;\n};\n\nexport const queen: Mobility = (x1, y1, x2, y2) => {\n  return bishop(x1, y1, x2, y2) || rook(x1, y1, x2, y2);\n};\n\nconst king =\n  (color: cg.Color, rookFiles: number[], canCastle: boolean): Mobility =>\n  (x1, y1, x2, y2) =>\n    (diff(x1, x2) < 2 && diff(y1, y2) < 2) ||\n    (canCastle &&\n      y1 === y2 &&\n      y1 === (color === 'white' ? 0 : 7) &&\n      ((x1 === 4 && ((x2 === 2 && rookFiles.includes(0)) || (x2 === 6 && rookFiles.includes(7)))) ||\n        rookFiles.includes(x2)));\n\nfunction rookFilesOf(pieces: cg.Pieces, color: cg.Color) {\n  const backrank = color === 'white' ? '1' : '8';\n  const files = [];\n  for (const [key, piece] of pieces) {\n    if (key[1] === backrank && piece.color === color && piece.role === 'rook') {\n      files.push(util.key2pos(key)[0]);\n    }\n  }\n  return files;\n}\n\nexport function premove(pieces: cg.Pieces, key: cg.Key, canCastle: boolean): cg.Key[] {\n  const piece = pieces.get(key);\n  if (!piece) return [];\n  const pos = util.key2pos(key),\n    r = piece.role,\n    mobility: Mobility =\n      r === 'pawn'\n        ? pawn(piece.color)\n        : r === 'knight'\n        ? knight\n        : r === 'bishop'\n        ? bishop\n        : r === 'rook'\n        ? rook\n        : r === 'queen'\n        ? queen\n        : king(piece.color, rookFilesOf(pieces, piece.color), canCastle);\n  return util.allPos\n    .filter(pos2 => (pos[0] !== pos2[0] || pos[1] !== pos2[1]) && mobility(pos[0], pos[1], pos2[0], pos2[1]))\n    .map(util.pos2key);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}