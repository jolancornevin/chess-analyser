{"ast":null,"code":"var _jsxFileName = \"/Users/jcornevin/Dev/Perso/chess-analyser/src/chess.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\nimport Chessground from \"@react-chess/chessground\";\nimport { Chess } from 'chess.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RightMenu({\n  pgn,\n  setPGN,\n  orientation,\n  setOrientation\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flex: 1\n    },\n    children: [\"PGN: \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: pgn,\n      onChange: e => setPGN(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 18\n    }, this), \"Direction: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: orientation === \"white\",\n      onChange: e => {\n        console.log(e.target.value);\n        setOrientation(e.target.checked ? \"white\" : \"black\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = RightMenu;\nexport function ChessUX({}) {\n  _s();\n  const [orientation, setOrientation] = useState(\"white\");\n  const [pgn, setPGN] = useState('');\n  const [fen, setFen] = useState('');\n  const chess = useMemo(() => new Chess(), []);\n  useEffect(() => {\n    chess.loadPgn(pgn);\n    setFen(chess.fen());\n    console.log(\"updated\", chess);\n  }, [chess, pgn, setFen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Chessground, {\n        config: {\n          fen: fen,\n          orientation: orientation,\n          autoCastle: true,\n          highlight: {\n            lastMove: true,\n            check: true\n          },\n          animation: {\n            enabled: true\n          },\n          drawable: {\n            enabled: true\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RightMenu, {\n      pgn: pgn,\n      setPGN: setPGN,\n      orientation: orientation,\n      setOrientation: setOrientation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(ChessUX, \"ULCYJDbeJOi9NbFH5LMA/kxODEY=\");\n_c2 = ChessUX;\n;\nvar _c, _c2;\n$RefreshReg$(_c, \"RightMenu\");\n$RefreshReg$(_c2, \"ChessUX\");","map":{"version":3,"names":["useEffect","useMemo","useState","Chessground","Chess","jsxDEV","_jsxDEV","RightMenu","pgn","setPGN","orientation","setOrientation","style","flex","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","console","log","_c","ChessUX","_s","fen","setFen","chess","loadPgn","display","flexDirection","config","autoCastle","highlight","lastMove","check","animation","enabled","drawable","_c2","$RefreshReg$"],"sources":["/Users/jcornevin/Dev/Perso/chess-analyser/src/chess.tsx"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\n\nimport Chessground from \"@react-chess/chessground\";\nimport { Chess } from 'chess.js';\n\ndeclare const colors: readonly [\"white\", \"black\"];\ndeclare type Color = typeof colors[number];\n\n\ninterface RightMenuProps {\n    pgn: string;\n    setPGN: React.Dispatch<React.SetStateAction<string>>;\n    orientation: Color;\n    setOrientation: React.Dispatch<React.SetStateAction<Color>>;\n}\n\nfunction RightMenu({ pgn, setPGN, orientation, setOrientation }: RightMenuProps): JSX.Element {\n    return (\n\n        <div style={{ flex: 1 }}>\n            {/* Fen: <input value={fen} onChange={e => setFen(e.target.value)} /> */}\n            PGN: <textarea value={pgn} onChange={e => setPGN(e.target.value)} />\n            Direction: <input type=\"checkbox\" checked={orientation === \"white\"} onChange={e => {console.log(e.target.value); setOrientation(e.target.checked ? \"white\": \"black\")}} />\n        </div>\n    )\n}\n\ninterface ChessUXProps {}\nexport function ChessUX({ }: ChessUXProps): JSX.Element {\n    const [orientation, setOrientation] = useState<Color>(\"white\");\n    const [pgn, setPGN] = useState('');\n    const [fen, setFen] = useState('');\n\n    const chess = useMemo(() => new Chess(), []);\n\n    useEffect(() => {\n        chess.loadPgn(pgn);\n        setFen(chess.fen());\n        console.log(\"updated\", chess)\n    }, [chess, pgn, setFen]);    \n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <div style={{ flex: 2 }}>\n                <Chessground config={{\n                    fen: fen,\n                    orientation: orientation,\n                    autoCastle: true,\n                    highlight: {\n                        lastMove: true,\n                        check: true,\n                    },\n                    animation: {\n                        enabled: true,\n                    },\n                    drawable: {\n                        enabled: true,\n                    },\n                }} />\n            </div>\n            <RightMenu pgn={pgn} setPGN={setPGN} orientation={orientation} setOrientation={setOrientation} />\n    </div>)\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}