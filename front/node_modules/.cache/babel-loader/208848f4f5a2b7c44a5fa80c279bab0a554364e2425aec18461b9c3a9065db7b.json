{"ast":null,"code":"var _jsxFileName = \"/Users/jcornevin/Dev/Perso/chess-analyser/src/components/chess.tsx\",\n  _s = $RefreshSig$();\nimport { useMemo, useState } from \"react\";\nimport Chessground from \"@react-chess/chessground\";\nimport { Chess } from 'chess.js';\nimport { RightMenu } from \"./right-menu/right-menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChessUX({}) {\n  _s();\n  const [orientation, setOrientation] = useState(\"white\");\n  const [fen, setFen] = useState('');\n  const [lastMove, setLastMove] = useState([]);\n  const [shape, setShape] = useState();\n  const chess = useMemo(() => new Chess(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Chessground, {\n        config: {\n          fen: fen,\n          lastMove: lastMove,\n          orientation: orientation,\n          autoCastle: true,\n          highlight: {\n            lastMove: true,\n            check: true\n          },\n          animation: {\n            enabled: true\n          },\n          drawable: {\n            enabled: true,\n            autoShapes: shape ? [shape] : []\n          },\n          events: {\n            change: () => {\n              console.log(\"change\");\n            },\n            move: (orig, dest, capturedPiece) => {\n              console.log(\"move\");\n            },\n            dropNewPiece: (piece, key) => {\n              console.log(\"dropNewPiece\");\n            },\n            select: key => {\n              console.log(\"select\");\n            },\n            insert: elements => {\n              console.log(\"insert\");\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: 16,\n        width: 500,\n        backgroundColor: \"#312e2b\",\n        padding: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(RightMenu, {\n        chess: chess,\n        orientation: orientation,\n        setOrientation: setOrientation,\n        setFen: setFen,\n        setLastMove: setLastMove,\n        setShape: setShape\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(ChessUX, \"SPSrjIP00xkNYPy13MKdLtSfrSI=\");\n_c = ChessUX;\n;\nvar _c;\n$RefreshReg$(_c, \"ChessUX\");","map":{"version":3,"names":["useMemo","useState","Chessground","Chess","RightMenu","jsxDEV","_jsxDEV","ChessUX","_s","orientation","setOrientation","fen","setFen","lastMove","setLastMove","shape","setShape","chess","style","display","flexDirection","children","flex","config","autoCastle","highlight","check","animation","enabled","drawable","autoShapes","events","change","console","log","move","orig","dest","capturedPiece","dropNewPiece","piece","key","select","insert","elements","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","width","backgroundColor","padding","_c","$RefreshReg$"],"sources":["/Users/jcornevin/Dev/Perso/chess-analyser/src/components/chess.tsx"],"sourcesContent":["import { useMemo, useState } from \"react\";\n\nimport Chessground from \"@react-chess/chessground\";\nimport { Chess } from 'chess.js';\nimport { DrawShape } from \"chessground/draw\";\nimport * as cg from 'chessground/types';\nimport { RightMenu } from \"./right-menu/right-menu\";\n\ndeclare const colors: readonly [\"white\", \"black\"];\ndeclare type Color = typeof colors[number];\n\n\ninterface ChessUXProps {}\nexport function ChessUX({ }: ChessUXProps): JSX.Element {\n    const [orientation, setOrientation] = useState<Color>(\"white\");\n    const [fen, setFen] = useState('');\n    const [lastMove, setLastMove] = useState([]);\n    const [shape, setShape] = useState<DrawShape>();\n\n    const chess = useMemo(() => new Chess(), []);\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <div style={{ flex: 2 }}>\n                <Chessground config={{\n                    fen: fen,\n                    lastMove: lastMove,\n                    orientation: orientation,\n                    autoCastle: true,\n                    highlight: {\n                        lastMove: true,\n                        check: true,\n                    },\n                    animation: {\n                        enabled: true,\n                    },\n                    drawable: {\n                        enabled: true,\n                        autoShapes: shape?[\n                            shape,\n                        ]: []\n                    },\n                    events: {\n                        change: () => {console.log(\"change\")},\n                        move: (orig: cg.Key, dest: cg.Key, capturedPiece?: cg.Piece) => {console.log(\"move\")},\n                        dropNewPiece: (piece: cg.Piece, key: cg.Key) => {console.log(\"dropNewPiece\")},\n                        select: (key: cg.Key) => {console.log(\"select\")},\n                        insert: (elements: cg.Elements) => {console.log(\"insert\")},\n                    },\n                }} />\n            </div>\n            <div style={{ marginLeft: 16, width: 500, backgroundColor: \"#312e2b\", padding: 16 }}>\n                <RightMenu chess={chess} orientation={orientation} setOrientation={setOrientation} setFen={setFen} setLastMove={setLastMove} setShape={setShape} />\n            </div>\n    </div>)\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}